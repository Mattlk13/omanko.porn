map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

upstream mastodon_web_app {
  server web:3000;
}

upstream mastodon_streaming_app {
  server streaming:4000;
}

proxy_cache_path /var/cache/nginx/cache levels=1:2 keys_zone=CACHE:128m max_size=512m inactive=1d;
proxy_temp_path /var/cache/nginx/tmp;

server {
  listen 80;
  listen [::]:80;
  server_name omanko.porn;
  server_name assets.omanko.porn;
  server_name files.omanko.porn;
  server_name www.omanko.porn;

  location /.well-known/acme-challenge/ {
    root /usr/share/nginx/html;
  }

  location / {
    if ($host = "www.omanko.porn") {
      return 301 https://omanko.porn$request_uri;
    }
    return 301 https://$host$request_uri;
  }
}

server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name omanko.porn;
  server_name www.omanko.porn;

  ssl_protocols TLSv1.2;
  ssl_ciphers EECDH+AESGCM:EECDH+AES;
  ssl_ecdh_curve prime256v1;
  ssl_prefer_server_ciphers on;
  ssl_session_cache shared:SSL:10m;

  ssl_certificate     /etc/letsencrypt/live/omanko.porn/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/omanko.porn/privkey.pem;

  client_max_body_size 0;

  root /usr/share/nginx/html;

  gzip on;
  gzip_vary on;
  gzip_proxied any;
  gzip_comp_level 6;
  gzip_buffers 16 8k;
  gzip_http_version 1.1;
  gzip_types application/atom+xml application/json image/svg+xml;

  if ($host != "omanko.porn") {
    return 301 https://omanko.porn$request_uri;
  }

  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";
  add_header Content-Security-Policy "child-src https:; connect-src 'self' wss://omanko.porn; default-src 'self'; font-src 'self' https://assets.omanko.porn; img-src https: data:; media-src https:; object-src 'none'; report-uri https://omanko.report-uri.io/r/default/csp/enforce; script-src 'self' https://assets.omanko.porn; style-src 'self' 'unsafe-inline' https://assets.omanko.porn";
  add_header Referrer-Policy no-referrer;

  location / {
    try_files $uri @proxy;
  }

  location @proxy {
    proxy_pass http://mastodon_web_app;
    include /etc/nginx/proxy_params;
    proxy_hide_header Strict-Transport-Security;
    proxy_pass_header Server;
    proxy_buffering off;
    proxy_redirect off;
    tcp_nodelay on;
  }

  location /api/v1/streaming {
    proxy_pass http://mastodon_streaming_app;
    include /etc/nginx/proxy_params;
    proxy_buffering off;
    proxy_redirect off;
    tcp_nodelay on;
  }

  error_page 500 501 502 503 504 /500.html;
}

server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name assets.omanko.porn;

  ssl_protocols TLSv1.2;
  ssl_ciphers EECDH+AESGCM:EECDH+AES;
  ssl_ecdh_curve prime256v1;
  ssl_prefer_server_ciphers on;
  ssl_session_cache shared:SSL:10m;

  ssl_certificate     /etc/letsencrypt/live/omanko.porn/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/omanko.porn/privkey.pem;

  root /usr/share/nginx/html;

  gzip on;
  gzip_static on;
  gzip_vary on;
  gzip_proxied any;
  gzip_comp_level 6;
  gzip_buffers 16 8k;
  gzip_http_version 1.1;
  gzip_types application/javascript image/svg+xml text/css;

  etag off;
  add_header Cache-Control "max-age=31536000, public, immutable";
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";
  add_header Access-Control-Allow-Origin https://omanko.porn;
}

server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name files.omanko.porn;

  ssl_protocols TLSv1.2;
  ssl_ciphers EECDH+AESGCM:EECDH+AES;
  ssl_ecdh_curve prime256v1;
  ssl_prefer_server_ciphers on;
  ssl_session_cache shared:SSL:10m;

  ssl_certificate     /etc/letsencrypt/live/omanko.porn/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/omanko.porn/privkey.pem;

  location / {
    resolver 8.8.8.8;
    set $s3_host omanko-porn-storage.c.sakurastorage.jp;
    add_header Cache-Control "max-age=31536000, public, immutable";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";
    add_header Access-Control-Allow-Origin https://omanko.porn;
    add_header X-Cache $upstream_cache_status;
    proxy_pass https://$s3_host$uri;
    proxy_set_header Host $s3_host;
    proxy_set_header Authorization "";
    proxy_hide_header Set-Cookie;
    proxy_hide_header ETag;
    proxy_ignore_headers Set-Cookie;
    proxy_ignore_headers Cache-Control;
    proxy_cache CACHE;
    proxy_cache_valid 200 1d;
    proxy_cache_valid 404 10s;
    proxy_cache_key https://$host$request_uri;
  }
}
